{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"05-02-Sentiment Classification.ipynb의 사본의 사본","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"IgMMQ4qZ4wfj"},"source":["# 한국어 Sentiment Classification\n","\n","- 영어(IMDb 데이터셋) Sentiment Classification을 참고하여 NSMC 네이버 영화 리뷰 감정분석 모델링하기"]},{"cell_type":"code","metadata":{"id":"i0e3c5fr4N_8","executionInfo":{"status":"ok","timestamp":1616722621805,"user_tz":-540,"elapsed":895,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["import os, random\n","import pandas as pd\n","import re\n","\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","\n","from torchtext import data, datasets\n","from torchtext.legacy.data import BucketIterator\n","from torchtext.legacy import data\n","from torchtext.legacy.data import TabularDataset"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ndtfbePoLU36","executionInfo":{"status":"ok","timestamp":1616722640871,"user_tz":-540,"elapsed":19957,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"9d56ac88-57f7-4008-8d8c-5ca7cff20a0c"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","path = \"/content/drive/MyDrive/Transformer/data\""],"execution_count":8,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wwJgO8uFGOFM","executionInfo":{"status":"ok","timestamp":1616722640872,"user_tz":-540,"elapsed":19954,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["path = \"/content/drive/MyDrive/Transformer/data\""],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"nnfiwoAbGceq","executionInfo":{"status":"ok","timestamp":1616722645211,"user_tz":-540,"elapsed":24280,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["train_df = pd.read_csv(os.path.join(path, \"ratings_train.txt\"), sep='\\t', encoding='utf-8')\n","test_df = pd.read_csv(os.path.join(path, \"ratings_test.txt\"), sep='\\t', encoding='utf-8')\n","\n","train_df[:1000].to_csv(os.path.join(path, \"ratings_train_small.txt\"), sep='\\t', index=False)\n","test_df[:100].to_csv(os.path.join(path, \"ratings_test_small.txt\"), sep='\\t', index=False)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"X6q4QAfVPotS","executionInfo":{"status":"ok","timestamp":1616722645212,"user_tz":-540,"elapsed":24273,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":[""],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"cjAH5SkdGkV9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722645213,"user_tz":-540,"elapsed":24270,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"5497f0e8-c0e7-4fdd-9520-f86858f5f6f8"},"source":["print(train_df.shape)\n","print(test_df.shape)"],"execution_count":11,"outputs":[{"output_type":"stream","text":["(150000, 3)\n","(50000, 3)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xjKzCBkGG_du"},"source":["- 한국어 전처리 및 토크나이징"]},{"cell_type":"code","metadata":{"id":"akVqglYAHPBc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722650711,"user_tz":-540,"elapsed":29763,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"0e7e01f4-19aa-484d-b881-d7fbd0c8c1b1"},"source":["!python3 -m pip install konlpy"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Collecting konlpy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/85/0e/f385566fec837c0b83f216b2da65db9997b35dd675e107752005b7d392b1/konlpy-0.5.2-py2.py3-none-any.whl (19.4MB)\n","\u001b[K     |████████████████████████████████| 19.4MB 1.3MB/s \n","\u001b[?25hCollecting JPype1>=0.7.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/cd/a5/9781e2ef4ca92d09912c4794642c1653aea7607f473e156cf4d423a881a1/JPype1-1.2.1-cp37-cp37m-manylinux2010_x86_64.whl (457kB)\n","\u001b[K     |████████████████████████████████| 460kB 45.3MB/s \n","\u001b[?25hCollecting beautifulsoup4==4.6.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9e/d4/10f46e5cfac773e22707237bfcd51bbffeaf0a576b0a847ec7ab15bd7ace/beautifulsoup4-4.6.0-py3-none-any.whl (86kB)\n","\u001b[K     |████████████████████████████████| 92kB 11.6MB/s \n","\u001b[?25hRequirement already satisfied: tweepy>=3.7.0 in /usr/local/lib/python3.7/dist-packages (from konlpy) (3.10.0)\n","Collecting colorama\n","  Downloading https://files.pythonhosted.org/packages/44/98/5b86278fbbf250d239ae0ecb724f8572af1c91f4a11edf4d36a206189440/colorama-0.4.4-py2.py3-none-any.whl\n","Requirement already satisfied: lxml>=4.1.0 in /usr/local/lib/python3.7/dist-packages (from konlpy) (4.2.6)\n","Requirement already satisfied: numpy>=1.6 in /usr/local/lib/python3.7/dist-packages (from konlpy) (1.19.5)\n","Requirement already satisfied: typing-extensions; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from JPype1>=0.7.0->konlpy) (3.7.4.3)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from tweepy>=3.7.0->konlpy) (1.3.0)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.7/dist-packages (from tweepy>=3.7.0->konlpy) (1.15.0)\n","Requirement already satisfied: requests[socks]>=2.11.1 in /usr/local/lib/python3.7/dist-packages (from tweepy>=3.7.0->konlpy) (2.23.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->tweepy>=3.7.0->konlpy) (3.1.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (2020.12.5)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6; extra == \"socks\" in /usr/local/lib/python3.7/dist-packages (from requests[socks]>=2.11.1->tweepy>=3.7.0->konlpy) (1.7.1)\n","Installing collected packages: JPype1, beautifulsoup4, colorama, konlpy\n","  Found existing installation: beautifulsoup4 4.6.3\n","    Uninstalling beautifulsoup4-4.6.3:\n","      Successfully uninstalled beautifulsoup4-4.6.3\n","Successfully installed JPype1-1.2.1 beautifulsoup4-4.6.0 colorama-0.4.4 konlpy-0.5.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FhTcFwdcHS5e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722657613,"user_tz":-540,"elapsed":36661,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"ee88736f-e3ee-46da-d71b-f7dc81e7c2a6"},"source":["from konlpy.tag import Okt, Komoran, Hannanum, Kkma\n","tokenizer = Okt()\n","tokenizer.nouns('안녕하세요. 오늘 날씨가 참 좋습니다!')"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['오늘', '날씨']"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"wNOAc0_bG-w4","executionInfo":{"status":"ok","timestamp":1616722657614,"user_tz":-540,"elapsed":36658,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["def preprocess_sent(sentence):\n","  # sentence = re.sub(\"[^가-힣0-9a-zA-Z\\\\s]\", \" \", x)\n","  sentence = ' '.join(tokenizer.morphs(sentence))\n","  return sentence"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"RSJuveGyG6dc","executionInfo":{"status":"ok","timestamp":1616722657616,"user_tz":-540,"elapsed":36656,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["# 필드 정의\n","TEXT = data.Field(sequential=True,\n","                  use_vocab=True,\n","                  tokenize=lambda x: x.split(),\n","                  lower=True,\n","                  batch_first=True,\n","                  include_lengths=True)\n","\n","LABEL = data.LabelField(dtype = torch.float)"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"QiDldEEMG9P-","executionInfo":{"status":"ok","timestamp":1616722657616,"user_tz":-540,"elapsed":36652,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["train_data, test_data = TabularDataset.splits(\n","    path=path,\n","    train=os.path.join(path, \"ratings_train_small.txt\"),\n","    test=os.path.join(path, \"ratings_test_small.txt\"), format='tsv',\n","    fields=[(id, None), ('text', TEXT), ('label', LABEL)], skip_header=True)\n","\n","train_data, valid_data = train_data.split(random_state = random.seed(1234))"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"ygm5OiZVH2QD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722657617,"user_tz":-540,"elapsed":36649,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"4da8cb34-06aa-4d4d-8dc7-7b14aa650222"},"source":["print(vars(test_data[9]))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["{'text': ['이별의', '아픔뒤에', '찾아오는', '새로운', '인연의', '기쁨', 'but,', '모든', '사람이', '그렇지는', '않네..'], 'label': '1'}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"b24HMB93H5M7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722657618,"user_tz":-540,"elapsed":36647,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"6db2f92b-f92e-431e-c254-71f2af84fc5d"},"source":["print(train_data.fields.items())"],"execution_count":18,"outputs":[{"output_type":"stream","text":["dict_items([(<built-in function id>, None), ('text', <torchtext.legacy.data.field.Field object at 0x7f80613d6b10>), ('label', <torchtext.legacy.data.field.LabelField object at 0x7f80613d6b90>)])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lu7oiGssH68l","executionInfo":{"status":"ok","timestamp":1616722657619,"user_tz":-540,"elapsed":36644,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["TEXT.build_vocab(train_data,\n","                min_freq=10, \n","                max_size=1000)\n","\n","LABEL.build_vocab(train_data)"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"721jnn5DH9va","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722657619,"user_tz":-540,"elapsed":36640,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"ba044c5e-1760-4ae9-a0da-a4e4921f64c9"},"source":["print(len(TEXT.vocab))"],"execution_count":20,"outputs":[{"output_type":"stream","text":["28\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"eMszOlehH_ya","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722657620,"user_tz":-540,"elapsed":36638,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"f7243f36-2607-4927-f8ba-6b1faf96e6dc"},"source":["print(TEXT.vocab.stoi)"],"execution_count":21,"outputs":[{"output_type":"stream","text":["defaultdict(<bound method Vocab._default_unk_index of <torchtext.vocab.Vocab object at 0x7f80613ccfd0>>, {'<unk>': 0, '<pad>': 1, '영화': 2, '진짜': 3, '정말': 4, '너무': 5, '이': 6, '그냥': 7, '더': 8, '다': 9, '왜': 10, '보고': 11, '영화.': 12, '또': 13, '잘': 14, '좀': 15, '본': 16, '수': 17, '연기': 18, '완전': 19, 'ㅠㅠ': 20, '영화가': 21, '영화는': 22, '있는': 23, '하는': 24, '아': 25, '없는': 26, '최고의': 27})\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZdGupvxrIAuD","executionInfo":{"status":"ok","timestamp":1616722657620,"user_tz":-540,"elapsed":36634,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["BATCH_SIZE = 16\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","\n","train_iterator, valid_iterator, test_iterator = data.BucketIterator.splits(\n","    (train_data, valid_data, test_data), \n","    batch_size = BATCH_SIZE,\n","    sort_within_batch = True,\n","    sort_key = lambda x: len(x.text),\n","    device = device)"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"zT62baXCIFJP","executionInfo":{"status":"ok","timestamp":1616722657621,"user_tz":-540,"elapsed":36632,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["class RNN(nn.Module):\n","    def __init__(self, vocab_size, embedding_dim, hidden_dim, output_dim, n_layers, \n","                 bidirectional, dropout, pad_idx):\n","        \n","        super().__init__()\n","        self.embedding = nn.Embedding(vocab_size, embedding_dim, padding_idx = pad_idx)\n","        self.rnn = nn.LSTM(embedding_dim, \n","                           hidden_dim, \n","                           num_layers=n_layers, \n","                           bidirectional=bidirectional, \n","                           dropout=dropout)\n","        self.fc = nn.Linear(hidden_dim * 2, output_dim)\n","        self.dropout = nn.Dropout(dropout)\n","        \n","    def forward(self, text, text_lengths):\n","        \n","        #text = [sent len, batch size]\n","        \n","        embedded = self.dropout(self.embedding(text))        \n","        #embedded = [sent len, batch size, emb dim]\n","        \n","        # pack sequence\n","        packed_embedded = nn.utils.rnn.pack_padded_sequence(embedded, text_lengths.to('cpu'), batch_first=True)\n","        packed_output, (hidden, cell) = self.rnn(packed_embedded)\n","        \n","        #unpack sequence\n","        output, output_lengths = nn.utils.rnn.pad_packed_sequence(packed_output)\n","\n","        #output = [sent len, batch size, hid dim * num directions]\n","        #output over padding tokens are zero tensors\n","        \n","        #hidden = [num layers * num directions, batch size, hid dim]\n","        #cell = [num layers * num directions, batch size, hid dim]\n","        \n","        #concat the final forward (hidden[-2,:,:]) and backward (hidden[-1,:,:]) hidden layers\n","        #and apply dropout\n","        \n","        hidden = self.dropout(torch.cat((hidden[-2,:,:], hidden[-1,:,:]), dim = 1))\n","                \n","        #hidden = [batch size, hid dim * num directions]\n","            \n","        return self.fc(hidden)"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"i2vCDMADILyM","executionInfo":{"status":"ok","timestamp":1616722657621,"user_tz":-540,"elapsed":36628,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["INPUT_DIM = len(TEXT.vocab)\n","EMBEDDING_DIM = 100\n","HIDDEN_DIM = 256\n","OUTPUT_DIM = 1\n","N_LAYERS = 2\n","BIDIRECTIONAL = True\n","DROPOUT = 0.5\n","PAD_IDX = TEXT.vocab.stoi[TEXT.pad_token]\n","\n","model = RNN(INPUT_DIM, \n","            EMBEDDING_DIM, \n","            HIDDEN_DIM, \n","            OUTPUT_DIM, \n","            N_LAYERS, \n","            BIDIRECTIONAL, \n","            DROPOUT, \n","            PAD_IDX)"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"frAQShsUINh4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722658038,"user_tz":-540,"elapsed":37040,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"172cc2a3-a31a-43e1-dfdc-b2564beced50"},"source":["def count_parameters(model):\n","    return sum(p.numel() for p in model.parameters() if p.requires_grad)\n","\n","print(f'The model has {count_parameters(model):,} trainable parameters')"],"execution_count":25,"outputs":[{"output_type":"stream","text":["The model has 2,313,457 trainable parameters\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bnDJyh7RIOpB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722658038,"user_tz":-540,"elapsed":37036,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"d1f71bab-fd0d-434f-9af6-e113bfc14de2"},"source":["UNK_IDX = TEXT.vocab.stoi[TEXT.unk_token]\n","\n","model.embedding.weight.data[UNK_IDX] = torch.zeros(EMBEDDING_DIM)\n","model.embedding.weight.data[PAD_IDX] = torch.zeros(EMBEDDING_DIM)\n","\n","print(model.embedding.weight.data)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],\n","        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],\n","        [ 0.3074,  0.2434, -1.7223,  ...,  1.2647, -1.0247,  1.2207],\n","        ...,\n","        [ 1.3845,  0.5614,  0.1335,  ..., -0.4696,  0.7476,  0.0290],\n","        [-0.3549,  0.3362,  1.9463,  ...,  0.7001, -0.0834,  1.6011],\n","        [ 1.1684, -0.0246,  2.1236,  ..., -1.1918, -0.8074, -0.3625]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XKW2FZ2zIQgO","executionInfo":{"status":"ok","timestamp":1616722664438,"user_tz":-540,"elapsed":43433,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["optimizer = optim.Adam(model.parameters())\n","criterion = nn.BCEWithLogitsLoss()\n","\n","model = model.to(device)\n","criterion = criterion.to(device)"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"6un6EYElIR50","executionInfo":{"status":"ok","timestamp":1616722664439,"user_tz":-540,"elapsed":43430,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["def binary_accuracy(preds, y):\n","    \"\"\"\n","    Returns accuracy per batch, i.e. if you get 8/10 right, this returns 0.8, NOT 8\n","    \"\"\"\n","\n","    #round predictions to the closest integer\n","    rounded_preds = torch.round(torch.sigmoid(preds))\n","    correct = (rounded_preds == y).float() #convert into float for division \n","    acc = correct.sum() / len(correct)\n","    return acc"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"id":"aqgGNRMvIS3d","executionInfo":{"status":"ok","timestamp":1616722664760,"user_tz":-540,"elapsed":43747,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["def train(model, iterator, optimizer, criterion):\n","    \n","    epoch_loss = 0\n","    epoch_acc = 0\n","    \n","    model.train()\n","    \n","    for batch in iterator:\n","        \n","        optimizer.zero_grad()\n","        text, text_lengths = batch.text\n","        predictions = model(text, text_lengths).squeeze(1)\n","        loss = criterion(predictions, batch.label)\n","        acc = binary_accuracy(predictions, batch.label)\n","        \n","        loss.backward()\n","        \n","        optimizer.step()\n","        \n","        epoch_loss += loss.item()\n","        epoch_acc += acc.item()\n","        \n","    return epoch_loss / len(iterator), epoch_acc / len(iterator)"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"NUuhyvzKITyJ","executionInfo":{"status":"ok","timestamp":1616722664760,"user_tz":-540,"elapsed":43743,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["def evaluate(model, iterator, criterion):\n","    \n","    epoch_loss = 0\n","    epoch_acc = 0\n","    \n","    model.eval()\n","    \n","    with torch.no_grad():\n","    \n","        for batch in iterator:\n","\n","            text, text_lengths = batch.text       \n","            predictions = model(text, text_lengths).squeeze(1)\n","            \n","            loss = criterion(predictions, batch.label)\n","            \n","            acc = binary_accuracy(predictions, batch.label)\n","\n","            epoch_loss += loss.item()\n","            epoch_acc += acc.item()\n","        \n","    return epoch_loss / len(iterator), epoch_acc / len(iterator)"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"OklhxS4ZIUp9","executionInfo":{"status":"ok","timestamp":1616722664761,"user_tz":-540,"elapsed":43740,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["import time\n","\n","def epoch_time(start_time, end_time):\n","    elapsed_time = end_time - start_time\n","    elapsed_mins = int(elapsed_time / 60)\n","    elapsed_secs = int(elapsed_time - (elapsed_mins * 60))\n","    return elapsed_mins, elapsed_secs"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"OGAE2Y9tIWKY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722666267,"user_tz":-540,"elapsed":45242,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"9112b6d3-1734-46e1-eed7-61b170e09647"},"source":["N_EPOCHS = 1\n","\n","best_valid_loss = float('inf')\n","\n","for epoch in range(N_EPOCHS):\n","\n","    start_time = time.time()\n","    \n","    train_loss, train_acc = train(model, train_iterator, optimizer, criterion)\n","    valid_loss, valid_acc = evaluate(model, valid_iterator, criterion)\n","    \n","    end_time = time.time()\n","\n","    epoch_mins, epoch_secs = epoch_time(start_time, end_time)\n","    \n","    if valid_loss < best_valid_loss:\n","        best_valid_loss = valid_loss\n","        torch.save(model.state_dict(), os.path.join(path, 'rnn-imdb-sentiment.pt'))\n","    \n","    print(f'Epoch: {epoch+1:02} | Epoch Time: {epoch_mins}m {epoch_secs}s')\n","    print(f'\\tTrain Loss: {train_loss:.3f} | Train Acc: {train_acc*100:.2f}%')\n","    print(f'\\t Val. Loss: {valid_loss:.3f} |  Val. Acc: {valid_acc*100:.2f}%')"],"execution_count":32,"outputs":[{"output_type":"stream","text":["Epoch: 01 | Epoch Time: 0m 0s\n","\tTrain Loss: 0.695 | Train Acc: 50.66%\n","\t Val. Loss: 0.701 |  Val. Acc: 50.11%\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"MsGmrmLpIXXz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722666268,"user_tz":-540,"elapsed":45240,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"3ae89834-7e4b-48c9-bb38-a8257a11b074"},"source":["model.load_state_dict(torch.load(os.path.join(path, 'rnn-imdb-sentiment.pt')))\n","\n","test_loss, test_acc = evaluate(model, test_iterator, criterion)\n","\n","print(f'Test Loss: {test_loss:.3f} | Test Acc: {test_acc*100:.2f}%')"],"execution_count":33,"outputs":[{"output_type":"stream","text":["Test Loss: 0.688 | Test Acc: 51.79%\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FHw93qCHInIU","executionInfo":{"status":"ok","timestamp":1616722666268,"user_tz":-540,"elapsed":45236,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}}},"source":["def predict_sentiment(model, sentence):\n","    model.eval()\n","    tokenized = preprocess_sent(sentence).split()\n","    indexed = [[TEXT.vocab.stoi[t] for t in tokenized]]\n","    length = [len(indexed)]\n","    tensor = torch.LongTensor(indexed).to(device)\n","\n","    length_tensor = torch.LongTensor(length)\n","    prediction = torch.sigmoid(model(tensor, length_tensor))\n","    \n","    return prediction.item()"],"execution_count":34,"outputs":[]},{"cell_type":"code","metadata":{"id":"MRxtLCBNMt2p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616722666269,"user_tz":-540,"elapsed":45233,"user":{"displayName":"stp L","photoUrl":"","userId":"16125751050798431485"}},"outputId":"f27b0b2f-5496-4d03-b59e-1b62a7929a12"},"source":["predict_sentiment(model, '이번 영화는 지금까지 본 영화 중에 가장 재미없다')"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.4845505952835083"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"0tC6nL-6NvzA"},"source":[""],"execution_count":null,"outputs":[]}]}